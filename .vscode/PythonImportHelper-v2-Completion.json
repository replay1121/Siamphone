[
    {
        "label": "json",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "json",
        "description": "json",
        "detail": "json",
        "documentation": {}
    },
    {
        "label": "smtplib",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "smtplib",
        "description": "smtplib",
        "detail": "smtplib",
        "documentation": {}
    },
    {
        "label": "os",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "os",
        "description": "os",
        "detail": "os",
        "documentation": {}
    },
    {
        "label": "basename",
        "importPath": "os.path",
        "description": "os.path",
        "isExtraImport": true,
        "detail": "os.path",
        "documentation": {}
    },
    {
        "label": "Template",
        "importPath": "string",
        "description": "string",
        "isExtraImport": true,
        "detail": "string",
        "documentation": {}
    },
    {
        "label": "MIMEText",
        "importPath": "email.mime.text",
        "description": "email.mime.text",
        "isExtraImport": true,
        "detail": "email.mime.text",
        "documentation": {}
    },
    {
        "label": "MIMEMultipart",
        "importPath": "email.mime.multipart",
        "description": "email.mime.multipart",
        "isExtraImport": true,
        "detail": "email.mime.multipart",
        "documentation": {}
    },
    {
        "label": "datetime",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "datetime",
        "description": "datetime",
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "datetime",
        "importPath": "datetime",
        "description": "datetime",
        "isExtraImport": true,
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "requests",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "requests",
        "description": "requests",
        "detail": "requests",
        "documentation": {}
    },
    {
        "label": "urllib,",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "urllib.",
        "description": "urllib.",
        "detail": "urllib.",
        "documentation": {}
    },
    {
        "label": "BeautifulSoup",
        "importPath": "bs4",
        "description": "bs4",
        "isExtraImport": true,
        "detail": "bs4",
        "documentation": {}
    },
    {
        "label": "literal_eval",
        "importPath": "ast",
        "description": "ast",
        "isExtraImport": true,
        "detail": "ast",
        "documentation": {}
    },
    {
        "label": "sentMail",
        "importPath": "Email",
        "description": "Email",
        "isExtraImport": true,
        "detail": "Email",
        "documentation": {}
    },
    {
        "label": "time",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "time",
        "description": "time",
        "detail": "time",
        "documentation": {}
    },
    {
        "label": "timeit",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "timeit",
        "description": "timeit",
        "detail": "timeit",
        "documentation": {}
    },
    {
        "label": "re",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "re",
        "description": "re",
        "detail": "re",
        "documentation": {}
    },
    {
        "label": "sentMail",
        "kind": 2,
        "importPath": "Email",
        "description": "Email",
        "peekOfCode": "def sentMail(newitem,newprice,email):\n    try:\n        sending_ts = datetime.now()\n        sub = \"New Smartphones Siamphone %s\" % sending_ts.strftime('%Y-%m-%d %H:%M:%S')\n        msg = MIMEMultipart('alternative')\n        msg['From'] = \"Notification SiamPhone\"\n        msg['To'] = email\n        msg['Subject'] = sub\n        data = \"\"\n        for item in newitem:",
        "detail": "Email",
        "documentation": {}
    },
    {
        "label": "email_address",
        "kind": 5,
        "importPath": "Email",
        "description": "Email",
        "peekOfCode": "email_address = 'puridech.yj@gmail.com'\nemail_password = '0875507608' \ndef sentMail(newitem,newprice,email):\n    try:\n        sending_ts = datetime.now()\n        sub = \"New Smartphones Siamphone %s\" % sending_ts.strftime('%Y-%m-%d %H:%M:%S')\n        msg = MIMEMultipart('alternative')\n        msg['From'] = \"Notification SiamPhone\"\n        msg['To'] = email\n        msg['Subject'] = sub",
        "detail": "Email",
        "documentation": {}
    },
    {
        "label": "email_password",
        "kind": 5,
        "importPath": "Email",
        "description": "Email",
        "peekOfCode": "email_password = '0875507608' \ndef sentMail(newitem,newprice,email):\n    try:\n        sending_ts = datetime.now()\n        sub = \"New Smartphones Siamphone %s\" % sending_ts.strftime('%Y-%m-%d %H:%M:%S')\n        msg = MIMEMultipart('alternative')\n        msg['From'] = \"Notification SiamPhone\"\n        msg['To'] = email\n        msg['Subject'] = sub\n        data = \"\"",
        "detail": "Email",
        "documentation": {}
    },
    {
        "label": "inputNumber",
        "kind": 2,
        "importPath": "Scraping",
        "description": "Scraping",
        "peekOfCode": "def inputNumber(message):\n    while True:\n        try:\n            userInput = int(input(message))       \n        except ValueError:\n            print(\"Not an integer! Try again.\")\n            continue\n        else:\n            return userInput \n            break",
        "detail": "Scraping",
        "documentation": {}
    },
    {
        "label": "inputemail",
        "kind": 2,
        "importPath": "Scraping",
        "description": "Scraping",
        "peekOfCode": "def inputemail(email):\n    while True:\n        email = input(email)\n        if(re.search(regex,email)):  \n            print(\"Valid Email\")\n            return email        \n            break  \n        else:\n            print(\"Please Enter the Email Agian:\")\n            continue",
        "detail": "Scraping",
        "documentation": {}
    },
    {
        "label": "contains",
        "kind": 2,
        "importPath": "Scraping",
        "description": "Scraping",
        "peekOfCode": "def contains(list, filter):\n    for x in list:\n        if filter(x):\n            return True\n    return False\ndef scarping():\n    url = \"https://store.siamphone.com/services/spec/test?&order_by=release_date%20desc\"\n    headers = {\n        'Access-Control-Allow-Origin': '*',\n        'Access-Control-Allow-Methods': 'GET',",
        "detail": "Scraping",
        "documentation": {}
    },
    {
        "label": "scarping",
        "kind": 2,
        "importPath": "Scraping",
        "description": "Scraping",
        "peekOfCode": "def scarping():\n    url = \"https://store.siamphone.com/services/spec/test?&order_by=release_date%20desc\"\n    headers = {\n        'Access-Control-Allow-Origin': '*',\n        'Access-Control-Allow-Methods': 'GET',\n        'Access-Control-Allow-Headers': 'Content-Type',\n        'Access-Control-Max-Age': '3600',\n        'Accept-Encoding': 'identity',\n        'User-Agent': 'Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:52.0) Gecko/20100101 Firefox/52.0'\n        }",
        "detail": "Scraping",
        "documentation": {}
    },
    {
        "label": "countdown",
        "kind": 2,
        "importPath": "Scraping",
        "description": "Scraping",
        "peekOfCode": "def countdown(t): \n    while t: \n            mins, secs = divmod(t, 60) \n            timer = '{:02d}:{:02d}'.format(mins, secs) \n            print(timer, end=\"\\r\") \n            time.sleep(1)\n            t -= 1\n    scarping()\ndef success():\n    countdown(int(t))",
        "detail": "Scraping",
        "documentation": {}
    },
    {
        "label": "success",
        "kind": 2,
        "importPath": "Scraping",
        "description": "Scraping",
        "peekOfCode": "def success():\n    countdown(int(t))\nscarping()",
        "detail": "Scraping",
        "documentation": {}
    },
    {
        "label": "regex",
        "kind": 5,
        "importPath": "Scraping",
        "description": "Scraping",
        "peekOfCode": "regex = '^[a-z0-9]+[\\._]?[a-z0-9]+[@]\\w+[.]\\w{2,3}$'\ndef inputNumber(message):\n    while True:\n        try:\n            userInput = int(input(message))       \n        except ValueError:\n            print(\"Not an integer! Try again.\")\n            continue\n        else:\n            return userInput ",
        "detail": "Scraping",
        "documentation": {}
    },
    {
        "label": "email",
        "kind": 5,
        "importPath": "Scraping",
        "description": "Scraping",
        "peekOfCode": "email = inputemail(\"Enter the email you want to send notifications for : \")\nt=inputNumber(\"Please Set Time Cooldown Data(Min):\")\nt = t*60\nprint(\"****************************************************************************************\")\ndef contains(list, filter):\n    for x in list:\n        if filter(x):\n            return True\n    return False\ndef scarping():",
        "detail": "Scraping",
        "documentation": {}
    },
    {
        "label": "t",
        "kind": 5,
        "importPath": "Scraping",
        "description": "Scraping",
        "peekOfCode": "t = t*60\nprint(\"****************************************************************************************\")\ndef contains(list, filter):\n    for x in list:\n        if filter(x):\n            return True\n    return False\ndef scarping():\n    url = \"https://store.siamphone.com/services/spec/test?&order_by=release_date%20desc\"\n    headers = {",
        "detail": "Scraping",
        "documentation": {}
    }
]